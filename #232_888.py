# '''
# Подвиг 6. Имеется вложенный список из трех строк:
#
# t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
#     ["Я", "Python", "выучил", "с", "каналом"],
#     ["Балакирев", "что", "раздавал?"]]
# Необходимо реализовать проверку на наличие в этом списке введенного слова. Результат (True или False) вывести на экран. Решить задачу необходимо без применения условного оператора.
#
# Sample Input:
#
# дядя
# Sample Output:
#
# True
# '''
#
t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
     ["Я", "Python", "выучил", "с", "каналом"],
     ["Балакирев", "что", "раздавал?"]]
# # здесь продолжайте программу
# verse = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
#     ["Я", "Python", "выучил", "с", "каналом"],
#     ["Балакирев", "что", "раздавал?"]]
# # Сохраняю проверочное слово
# word = input()
# # Проверяю его наличие в вложенных списках, через оператор in
# value = word in verse[0] or word in verse[1] or word in verse[2]
# # Вывожу в консоль полученный результат
# print(value)

# print(input() in sum(t, []))  # https://pythonist.ru/funkcziya-sum-v-python/

# t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
#     ["Я", "Python", "выучил", "с", "каналом"],
#     ["Балакирев", "что", "раздавал?"]]
# sample = input()
# print(sample in [w for row in t for w in row])


# t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
#     ["Я", "Python", "выучил", "с", "каналом"],
#     ["Балакирев", "что", "раздавал?"]]
# sample = input()
# print(any(sample in row for row in t))

print(input() in (*t[0], *t[1], *t[2]))

# from functools import reduce
#
#
# def a(f):
#     def b(*args):
#         return f(*args)
#
#     return b
#
#
# @a
# def c(*args):
#     e = reduce(lambda x, y: x + [i for i in y], args[0], list())
#     return input() in e
#
#
# d = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
#      ["Я", "Python", "выучил", "с", "каналом"],
#      ["Балакирев", "что", "раздавал?"]]
#
# print(c(d))